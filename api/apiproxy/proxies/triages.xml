<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="triages">
  <Description/>
  <FaultRules/>
  <PreFlow name="PreFlow">
    <Request>
      <Step>
        <Name>SetFormattedDateTime</Name>
      </Step>
      <Step>
        <Name>SA-RateLimit</Name>
      </Step>
      <Step>
        <Name>JS-HostValidation</Name>
      </Step>
      <Step>
        <Condition>isValidHost = false</Condition>
        <Name>RF-InvalidHost</Name>
      </Step>
      <Step>
        <Condition>(proxy.pathsuffix Not MatchesPath "/smart-triage")</Condition>
        <Name>RF-UnknownResource</Name>
      </Step>
      <Step>
        <Name>Quota-Product</Name>
      </Step>
      <Step>
        <Condition>ratelimit.SA-RateLimit.failed = true</Condition>
        <Name>RF-Quota-Exceeded</Name>
      </Step>
      <Step>
        <Name>CORS</Name>
      </Step>
      <Step>
        <Condition>cors.CORS.failed = true</Condition>
        <Name>RF-Cors</Name>
      </Step>
      <Step>
        <Name>JS-RegexTP</Name>
      </Step>
      <Step>
        <Name>RegexTP</Name>
      </Step>
      <Step>
        <Condition>regularexpressionprotection.RegexTP.failed = true</Condition>
        <Name>RF-RegexTP</Name>
      </Step>
      <Step>
        <Name>VA-VerifyApiKey</Name>
      </Step>
      <Step>
        <Condition>oauthV2.VA-VerifyApiKey.failed = true</Condition>
        <Name>RF-VerifyApiKey</Name>
      </Step>
      <Step>
        <Name>OAS-Triages-Validation</Name>
      </Step>
      <Step>
        <Condition>OASValidation.OAS-Triages-Validation.failed = true</Condition>
        <Name>RF-RequestValidation</Name>
      </Step>
      <Step>
        <Condition>(verifyapikey.VA-VerifyApiKey.env = "dev" and route != "dev") || (verifyapikey.VA-VerifyApiKey.env = "test" and route != "test") || (verifyapikey.VA-VerifyApiKey.env = "prod" and route != "prod")</Condition>
        <Name>RF-InvalidApikeyEnv</Name>
      </Step>
    </Request>
    <Response/>
  </PreFlow>
  <PostFlow name="PostFlow">
    <Request/>
    <Response/>
  </PostFlow>
  <Flows>
    <Flow name="Smart Triage Evaluate">
      <Description>Evaluar Triaje</Description>
      <Request>
      </Request>
      <Response>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/smart-triage") and (request.verb = "GET")</Condition>
    </Flow>    
  </Flows>
  <HTTPProxyConnection>
    <BasePath>/api-ne-diagnostic/v1/triages</BasePath>
    <Properties/>
  </HTTPProxyConnection>
  <RouteRule name="dev">
    <Condition>route = "dev"</Condition>
    <TargetEndpoint>dev</TargetEndpoint>
  </RouteRule>
  <RouteRule name="test">
    <Condition>route = "test"</Condition>
    <TargetEndpoint>test</TargetEndpoint>
  </RouteRule>
  <RouteRule name="prod">
    <Condition>route = "prod"</Condition>
    <TargetEndpoint>prod</TargetEndpoint>
  </RouteRule>
</ProxyEndpoint>
